<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.plate.publicmag.dao.PublicUserMapper">
  <resultMap id="BaseResultMap" type="com.plate.publicmag.model.PublicUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="loginname" jdbcType="VARCHAR" property="loginname" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="user_type" jdbcType="VARCHAR" property="userType" />
    <result column="idcard_type" jdbcType="VARCHAR" property="idcardType" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="address_area" jdbcType="VARCHAR" property="addressArea" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="address_domicile_area" jdbcType="VARCHAR" property="addressDomicileArea" />
    <result column="address_domicile" jdbcType="VARCHAR" property="addressDomicile" />
    <result column="mobilephone" jdbcType="VARCHAR" property="mobilephone" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_userid" jdbcType="INTEGER" property="createUserid" />
    <result column="create_username" jdbcType="VARCHAR" property="createUsername" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_userid" jdbcType="INTEGER" property="updateUserid" />
    <result column="update_username" jdbcType="TIMESTAMP" property="updateUsername" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, username, loginname, `password`, user_type, idcard_type, idcard, address_area, 
    address, address_domicile_area, address_domicile, mobilephone, telephone, remark, 
    `status`, create_time, create_userid, create_username, update_time, update_userid, 
    update_username
  </sql>
  <select id="selectByExample" parameterType="com.plate.publicmag.model.PublicUserExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from public_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from public_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from public_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.plate.publicmag.model.PublicUserExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from public_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.plate.publicmag.model.PublicUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into public_user (username, loginname, `password`, 
      user_type, idcard_type, idcard, 
      address_area, address, address_domicile_area, 
      address_domicile, mobilephone, telephone, 
      remark, `status`, create_time, 
      create_userid, create_username, update_time, 
      update_userid, update_username)
    values (#{username,jdbcType=VARCHAR}, #{loginname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{userType,jdbcType=VARCHAR}, #{idcardType,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, 
      #{addressArea,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{addressDomicileArea,jdbcType=VARCHAR}, 
      #{addressDomicile,jdbcType=VARCHAR}, #{mobilephone,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserid,jdbcType=INTEGER}, #{createUsername,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUserid,jdbcType=INTEGER}, #{updateUsername,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.plate.publicmag.model.PublicUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into public_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="loginname != null">
        loginname,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="idcardType != null">
        idcard_type,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="addressArea != null">
        address_area,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="addressDomicileArea != null">
        address_domicile_area,
      </if>
      <if test="addressDomicile != null">
        address_domicile,
      </if>
      <if test="mobilephone != null">
        mobilephone,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserid != null">
        create_userid,
      </if>
      <if test="createUsername != null">
        create_username,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUserid != null">
        update_userid,
      </if>
      <if test="updateUsername != null">
        update_username,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null">
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="idcardType != null">
        #{idcardType,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="addressArea != null">
        #{addressArea,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="addressDomicileArea != null">
        #{addressDomicileArea,jdbcType=VARCHAR},
      </if>
      <if test="addressDomicile != null">
        #{addressDomicile,jdbcType=VARCHAR},
      </if>
      <if test="mobilephone != null">
        #{mobilephone,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserid != null">
        #{createUserid,jdbcType=INTEGER},
      </if>
      <if test="createUsername != null">
        #{createUsername,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserid != null">
        #{updateUserid,jdbcType=INTEGER},
      </if>
      <if test="updateUsername != null">
        #{updateUsername,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.plate.publicmag.model.PublicUserExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from public_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update public_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.loginname != null">
        loginname = #{record.loginname,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=VARCHAR},
      </if>
      <if test="record.idcardType != null">
        idcard_type = #{record.idcardType,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.addressArea != null">
        address_area = #{record.addressArea,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.addressDomicileArea != null">
        address_domicile_area = #{record.addressDomicileArea,jdbcType=VARCHAR},
      </if>
      <if test="record.addressDomicile != null">
        address_domicile = #{record.addressDomicile,jdbcType=VARCHAR},
      </if>
      <if test="record.mobilephone != null">
        mobilephone = #{record.mobilephone,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserid != null">
        create_userid = #{record.createUserid,jdbcType=INTEGER},
      </if>
      <if test="record.createUsername != null">
        create_username = #{record.createUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserid != null">
        update_userid = #{record.updateUserid,jdbcType=INTEGER},
      </if>
      <if test="record.updateUsername != null">
        update_username = #{record.updateUsername,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update public_user
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      loginname = #{record.loginname,jdbcType=VARCHAR},
      `password` = #{record.password,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=VARCHAR},
      idcard_type = #{record.idcardType,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      address_area = #{record.addressArea,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      address_domicile_area = #{record.addressDomicileArea,jdbcType=VARCHAR},
      address_domicile = #{record.addressDomicile,jdbcType=VARCHAR},
      mobilephone = #{record.mobilephone,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_userid = #{record.createUserid,jdbcType=INTEGER},
      create_username = #{record.createUsername,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_userid = #{record.updateUserid,jdbcType=INTEGER},
      update_username = #{record.updateUsername,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.plate.publicmag.model.PublicUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update public_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null">
        loginname = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="idcardType != null">
        idcard_type = #{idcardType,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="addressArea != null">
        address_area = #{addressArea,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="addressDomicileArea != null">
        address_domicile_area = #{addressDomicileArea,jdbcType=VARCHAR},
      </if>
      <if test="addressDomicile != null">
        address_domicile = #{addressDomicile,jdbcType=VARCHAR},
      </if>
      <if test="mobilephone != null">
        mobilephone = #{mobilephone,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserid != null">
        create_userid = #{createUserid,jdbcType=INTEGER},
      </if>
      <if test="createUsername != null">
        create_username = #{createUsername,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserid != null">
        update_userid = #{updateUserid,jdbcType=INTEGER},
      </if>
      <if test="updateUsername != null">
        update_username = #{updateUsername,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.plate.publicmag.model.PublicUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update public_user
    set username = #{username,jdbcType=VARCHAR},
      loginname = #{loginname,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR},
      idcard_type = #{idcardType,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      address_area = #{addressArea,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      address_domicile_area = #{addressDomicileArea,jdbcType=VARCHAR},
      address_domicile = #{addressDomicile,jdbcType=VARCHAR},
      mobilephone = #{mobilephone,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_userid = #{createUserid,jdbcType=INTEGER},
      create_username = #{createUsername,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_userid = #{updateUserid,jdbcType=INTEGER},
      update_username = #{updateUsername,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>